{"ast":null,"code":"var _jsxFileName = \"/Users/anphong/Documents/freelancer/trung game/trunggames/src/App.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { ActionTypes } from './constants/actionTypes';\nimport 'react-slideshow-image/dist/styles.css';\nimport Banner from \"./components/Banner\";\nimport TopMenu from \"./components/TopMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStateToProps = state => {\n  return {\n    ...state\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onQuizLoad: payload => dispatch({\n    type: ActionTypes.QuizLoad,\n    payload\n  }),\n  onSubmit: payload => dispatch({\n    type: ActionTypes.QuizSubmit,\n    payload\n  }),\n  onPagerUpdate: payload => dispatch({\n    type: ActionTypes.PagerUpdate,\n    payload\n  })\n});\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\nconst fadeImages = [{\n  url: './image/banner.jpg',\n  caption: 'First Slide'\n}, {\n  url: './image/banner2.jpg',\n  caption: 'Second Slide'\n}, {\n  url: './image/banner3.png',\n  caption: 'Third Slide'\n}];\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quizes: [\n      // { id: 'data/javascript.json', name: 'Javascript' },\n      // { id: 'data/pmone.json', name: 'PM one' },\n      {\n        id: 'data/lich-su.json',\n        name: 'Lịch sử'\n      }, {\n        id: 'data/khtn.json',\n        name: 'Khoa học tự nhiên'\n      }, {\n        id: 'data/de-dia.json',\n        name: 'Địa lý'\n      }, {\n        id: 'data/tin-hoc.json',\n        name: 'Tin học'\n      }, {\n        id: 'data/cong-nghe.json',\n        name: 'Công nghệ'\n      }],\n      quizId: 'data/lich-su.json',\n      time: {},\n      seconds: 1800,\n      stop: false,\n      banner: this.props.banner\n    };\n    this.pager = {\n      index: 0,\n      size: 1,\n      count: 1\n    };\n  }\n  componentDidMount() {\n    // this.load(this.state.quizId);\n    // let timeLeftVar = this.secondsToTime(this.state.seconds);\n    // this.setState({time: timeLeftVar});\n    // this.startTimer();\n    // this.timer = 0;\n    // this.startTimer = this.startTimer.bind(this);\n    // this.countDown = this.countDown.bind(this);\n    // this.startTimer();\n  }\n\n  // secondsToTime(secs) {\n  //     let hours = Math.floor(secs / (60 * 60));\n  //\n  //     let divisor_for_minutes = secs % (60 * 60);\n  //     let minutes = Math.floor(divisor_for_minutes / 60);\n  //\n  //     let divisor_for_seconds = divisor_for_minutes % 60;\n  //     let seconds = Math.ceil(divisor_for_seconds);\n  //\n  //     let obj = {\n  //         \"h\": hours,\n  //         \"m\": minutes,\n  //         \"s\": seconds\n  //     };\n  //     return obj;\n  // }\n  //\n  // startTimer() {\n  //     if (this.timer === 0 && this.state.seconds > 0) {\n  //         this.timer = setInterval(this.countDown, 1000);\n  //     }\n  // }\n  //\n  // countDown() {\n  //     // Remove one second, set state so a re-render happens.\n  //     let seconds = this.state.seconds - 1;\n  //     this.setState({\n  //         time: this.secondsToTime(seconds),\n  //         seconds: seconds,\n  //     });\n  //\n  //     // Check if we're at zero.\n  //     if (seconds === 0) {\n  //         clearInterval(this.timer);\n  //         this.props.onSubmit();\n  //         alert('Đã hết thời gian');\n  //     }\n  // }\n  //\n  // load(quizId) {\n  //     let url = quizId || this.props.quizId;\n  //     fetch(`../${url}`).then(res => res.json()).then(res => {\n  //         let quiz = res;\n  //         quiz.questions = shuffle(quiz.questions);\n  //         let count = 0;\n  //         let questArray = [];\n  //         quiz.questions.forEach(q => {\n  //             count++;\n  //             if (count < 21) {\n  //                 q.options.forEach(o => o.selected = false);\n  //                 questArray.push(q);\n  //             }\n  //         });\n  //         quiz.questions = questArray;\n  //         quiz.config = Object.assign(this.props.quiz.config || {}, quiz.config);\n  //         this.pager.count = quiz.questions.length / this.pager.size;\n  //         this.props.onQuizLoad(quiz);\n  //         this.props.onPagerUpdate(this.pager);\n  //     });\n  // }\n  //\n  // onChange = (e) => {\n  //     this.setState({quizId: e.target.value, seconds: 1800});\n  //     this.load(e.target.value);\n  //     this.startTimer();\n  // }\n\n  render() {\n    const style = {\n      background: '#1e1327'\n    };\n    // const slideStyle={\n    //     height:'50%'\n    // }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(TopMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Banner, {\n        banner: fadeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","connect","ActionTypes","Banner","TopMenu","jsxDEV","_jsxDEV","mapStateToProps","state","mapDispatchToProps","dispatch","onQuizLoad","payload","type","QuizLoad","onSubmit","QuizSubmit","onPagerUpdate","PagerUpdate","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","fadeImages","url","caption","App","constructor","arguments","quizes","id","name","quizId","time","seconds","stop","banner","props","pager","index","size","count","componentDidMount","render","style","background","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/anphong/Documents/freelancer/trung game/trunggames/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport {ActionTypes} from './constants/actionTypes';\nimport 'react-slideshow-image/dist/styles.css'\nimport Banner from \"./components/Banner\";\nimport TopMenu from \"./components/TopMenu\";\n\nconst mapStateToProps = state => {\n    return {...state}\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onQuizLoad: payload => dispatch({type: ActionTypes.QuizLoad, payload}),\n    onSubmit: payload => dispatch({type: ActionTypes.QuizSubmit, payload}),\n    onPagerUpdate: payload => dispatch({type: ActionTypes.PagerUpdate, payload})\n});\n\nfunction shuffle(array) {\n    let currentIndex = array.length, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n}\n\nconst fadeImages = [\n    {\n        url: './image/banner.jpg',\n        caption: 'First Slide'\n    },\n    {\n        url: './image/banner2.jpg',\n        caption: 'Second Slide'\n    },\n    {\n        url: './image/banner3.png',\n        caption: 'Third Slide'\n    },\n];\n\nclass App extends Component {\n    state = {\n        quizes: [\n            // { id: 'data/javascript.json', name: 'Javascript' },\n            // { id: 'data/pmone.json', name: 'PM one' },\n            {id: 'data/lich-su.json', name: 'Lịch sử'},\n            {id: 'data/khtn.json', name: 'Khoa học tự nhiên'},\n            {id: 'data/de-dia.json', name: 'Địa lý'},\n            {id: 'data/tin-hoc.json', name: 'Tin học'},\n            {id: 'data/cong-nghe.json', name: 'Công nghệ'}\n        ],\n        quizId: 'data/lich-su.json',\n        time: {},\n        seconds: 1800,\n        stop: false,\n        banner: this.props.banner\n    };\n\n    pager = {\n        index: 0,\n        size: 1,\n        count: 1\n    }\n\n    componentDidMount() {\n        // this.load(this.state.quizId);\n        // let timeLeftVar = this.secondsToTime(this.state.seconds);\n        // this.setState({time: timeLeftVar});\n        // this.startTimer();\n        // this.timer = 0;\n        // this.startTimer = this.startTimer.bind(this);\n        // this.countDown = this.countDown.bind(this);\n        // this.startTimer();\n    }\n\n    // secondsToTime(secs) {\n    //     let hours = Math.floor(secs / (60 * 60));\n    //\n    //     let divisor_for_minutes = secs % (60 * 60);\n    //     let minutes = Math.floor(divisor_for_minutes / 60);\n    //\n    //     let divisor_for_seconds = divisor_for_minutes % 60;\n    //     let seconds = Math.ceil(divisor_for_seconds);\n    //\n    //     let obj = {\n    //         \"h\": hours,\n    //         \"m\": minutes,\n    //         \"s\": seconds\n    //     };\n    //     return obj;\n    // }\n    //\n    // startTimer() {\n    //     if (this.timer === 0 && this.state.seconds > 0) {\n    //         this.timer = setInterval(this.countDown, 1000);\n    //     }\n    // }\n    //\n    // countDown() {\n    //     // Remove one second, set state so a re-render happens.\n    //     let seconds = this.state.seconds - 1;\n    //     this.setState({\n    //         time: this.secondsToTime(seconds),\n    //         seconds: seconds,\n    //     });\n    //\n    //     // Check if we're at zero.\n    //     if (seconds === 0) {\n    //         clearInterval(this.timer);\n    //         this.props.onSubmit();\n    //         alert('Đã hết thời gian');\n    //     }\n    // }\n    //\n    // load(quizId) {\n    //     let url = quizId || this.props.quizId;\n    //     fetch(`../${url}`).then(res => res.json()).then(res => {\n    //         let quiz = res;\n    //         quiz.questions = shuffle(quiz.questions);\n    //         let count = 0;\n    //         let questArray = [];\n    //         quiz.questions.forEach(q => {\n    //             count++;\n    //             if (count < 21) {\n    //                 q.options.forEach(o => o.selected = false);\n    //                 questArray.push(q);\n    //             }\n    //         });\n    //         quiz.questions = questArray;\n    //         quiz.config = Object.assign(this.props.quiz.config || {}, quiz.config);\n    //         this.pager.count = quiz.questions.length / this.pager.size;\n    //         this.props.onQuizLoad(quiz);\n    //         this.props.onPagerUpdate(this.pager);\n    //     });\n    // }\n    //\n    // onChange = (e) => {\n    //     this.setState({quizId: e.target.value, seconds: 1800});\n    //     this.load(e.target.value);\n    //     this.startTimer();\n    // }\n\n    render() {\n        const style = {\n            background: '#1e1327'\n        }\n        // const slideStyle={\n        //     height:'50%'\n        // }\n        return (\n\n            <div style={style}>\n                <TopMenu/>\n                <Banner banner={fadeImages}/>\n\n                {/*<header className=\"p-2\">*/}\n                {/*    <div className=\"row\">*/}\n                {/*        <div className=\"col-6\">*/}\n                {/*            <h3>Quiz Kỳ I</h3>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"col-6 text-right\">*/}\n                {/*            <label className=\"mr-1\">Vui lòng chọn đề:</label>*/}\n                {/*            <select onChange={this.onChange}>*/}\n                {/*                {this.state.quizes.map(q => <option key={q.id} value={q.id}>{q.name}</option>)}*/}\n                {/*            </select>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</header>*/}\n                {/*<Quiz quiz={this.state.quiz} quizId={this.state.quizId} mode={this.state.mode} stop={this.state.stop}/>*/}\n                {/*<br/>*/}\n                {/*<div className=\"row\">*/}\n                {/*    <div className=\"col-8\">*/}\n\n                {/*    </div>*/}\n                {/*    <div className=\"col-4\">*/}\n                {/*        <div style={{float: 'right', color: 'red'}}>*/}\n                {/*            /!*<button onClick={this.startTimer}>Start</button>*!/*/}\n                {/*            <h5>{this.state.time.m} phút {this.state.time.s} giây </h5>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n                {/*<footer>*/}\n                {/*    <br/>*/}\n                {/*    <div className=\"row\">*/}\n                {/*        <div className=\"col-6\">*/}\n                {/*            <h3>Quiz Kỳ I</h3>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"col-6 text-right\">*/}\n                {/*            <label className=\"mr-1\">Vui lòng chọn đề:</label>*/}\n                {/*            <select onChange={this.onChange}>*/}\n                {/*                {this.state.quizes.map(q => <option key={q.id} value={q.id}>{q.name}</option>)}*/}\n                {/*            </select>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</footer>*/}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}